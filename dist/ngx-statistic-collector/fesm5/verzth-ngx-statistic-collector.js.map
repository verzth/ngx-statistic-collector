{"version":3,"file":"verzth-ngx-statistic-collector.js.map","sources":["ng://@verzth/ngx-statistic-collector/lib/ngx-statistic-collector.config.ts","ng://@verzth/ngx-statistic-collector/lib/ngx-statistic-collector.service.ts","ng://@verzth/ngx-statistic-collector/interceptors/AuthorizationInterceptor.ts","ng://@verzth/ngx-statistic-collector/lib/ngx-statistic-collector.module.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxStatisticCollectorConfig {\n  private host: string;\n  private key: string;\n  constructor(){}\n  setHost(host: string){\n    this.host = host;\n    return this;\n  }\n  getHost(){\n    return this.host;\n  }\n  setKey(key: string){\n    this.key = key;\n    return this;\n  }\n  getKey(){\n    return this.key;\n  }\n}\n\nexport const TIME = {\n  HOURLY: 'hourly',\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n};\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {GeneralResponse} from '../interfaces/GeneralResponse';\nimport EventParams from '../interfaces/EventParams';\nimport ContentParams from '../interfaces/ContentParams';\nimport HitParams from '../interfaces/HitParams';\nimport {NgxStatisticCollectorConfig} from './ngx-statistic-collector.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxStatisticCollectorService {\n\n  constructor(private http: HttpClient, private config: NgxStatisticCollectorConfig) {\n\n  }\n\n  getHits(time: string, params: HitParams): Observable<GeneralResponse<any>> {\n    return this.http.post<any>(\n      this.config.getHost() + 'hit/' + time,\n      params\n    );\n  }\n\n  getContents(time: string, params: ContentParams): Observable<GeneralResponse<any>> {\n    return this.http.post<any>(\n      this.config.getHost() + 'content/' + time,\n      params\n    );\n  }\n\n  getEvents(time: string, params: EventParams): Observable<GeneralResponse<any>> {\n    return this.http.post<any>(\n      this.config.getHost() + 'event/' + time,\n      params\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {NgxStatisticCollectorConfig} from '../lib/ngx-statistic-collector.config';\n\n@Injectable()\nexport class AuthorizationInterceptor implements HttpInterceptor{\n  constructor(private config: NgxStatisticCollectorConfig){}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const secureReq = req.clone( {\n      headers: req.headers\n        .set('Authorization', 'Basic ' + btoa(this.config.getKey() + ':')),\n      body: req.body\n    });\n    return next.handle(secureReq);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {NgxStatisticCollectorService} from './ngx-statistic-collector.service';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthorizationInterceptor} from '../interceptors/AuthorizationInterceptor';\nimport {NgxStatisticCollectorConfig} from './ngx-statistic-collector.config';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthorizationInterceptor, multi: true},\n    {provide: NgxStatisticCollectorService, useClass: NgxStatisticCollectorService},\n    {provide: NgxStatisticCollectorConfig, useClass: NgxStatisticCollectorConfig},\n  ]\n})\nexport class NgxStatisticCollectorModule { }\n"],"names":[],"mappings":";;;;;;;;AAAA;IAQE;KAAe;;;;;;;IACf,6CAAO;;;;;;IAAP,UAAQ,IAAY;QAClB,mBAAA,IAAI,GAAC,IAAI,GAAG,IAAI,CAAC;QACjB,0BAAO,IAAI,GAAC;KACb;;;;IACD,6CAAO;;;IAAP;QACE,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;IACD,4CAAM;;;;;;IAAN,UAAO,GAAW;QAChB,mBAAA,IAAI,GAAC,GAAG,GAAG,GAAG,CAAC;QACf,0BAAO,IAAI,GAAC;KACb;;;;IACD,4CAAM;;;IAAN;QACE,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;gBApBF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;sCAJD;CAEA;;;;;;;ACFA;IAcE,sCAAoB,IAAgB,EAAU,MAAmC;QAA7D,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAA6B;KAEhF;;;;;;IAED,8CAAO;;;;;IAAP,UAAQ,IAAY,EAAE,MAAiB;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,MAAM,GAAG,IAAI,EACrC,MAAM,CACP,CAAC;KACH;;;;;;IAED,kDAAW;;;;;IAAX,UAAY,IAAY,EAAE,MAAqB;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,UAAU,GAAG,IAAI,EACzC,MAAM,CACP,CAAC;KACH;;;;;;IAED,gDAAS;;;;;IAAT,UAAU,IAAY,EAAE,MAAmB;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,QAAQ,GAAG,IAAI,EACvC,MAAM,CACP,CAAC;KACH;;gBA5BF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;gBAVO,UAAU;gBAMV,2BAA2B;;;uCAPnC;CASA;;;;;;;ACTA;IAME,kCAAoB,MAAmC;QAAnC,WAAM,GAAN,MAAM,CAA6B;KAAG;;;;;;IAC1D,4CAAS;;;;;IAAT,UAAU,GAAqB,EAAE,IAAiB;;YAC1C,SAAS,GAAG,GAAG,CAAC,KAAK,CAAE;YAC3B,OAAO,EAAE,GAAG,CAAC,OAAO;iBACjB,GAAG,CAAC,eAAe,EAAE,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;YACpE,IAAI,EAAE,GAAG,CAAC,IAAI;SACf,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KAC/B;;gBAVF,UAAU;;;;gBAFH,2BAA2B;;IAanC,+BAAC;CAXD;;;;;;;ACJA;IAQA;KAU4C;;gBAV3C,QAAQ,SAAC;oBACR,YAAY,EAAE,EAAE;oBAChB,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,EAAE;oBACX,SAAS,EAAE;wBACT,EAAC,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,wBAAwB,EAAE,KAAK,EAAE,IAAI,EAAC;wBAC7E,EAAC,OAAO,EAAE,4BAA4B,EAAE,QAAQ,EAAE,4BAA4B,EAAC;wBAC/E,EAAC,OAAO,EAAE,2BAA2B,EAAE,QAAQ,EAAE,2BAA2B,EAAC;qBAC9E;iBACF;;IAC0C,kCAAC;CAV5C;;;;;;;;;;;;;;;;"}
