{"version":3,"sources":["ng://@verzth/ngx-statistic-collector/lib/ngx-statistic-collector.config.ts","ng://@verzth/ngx-statistic-collector/lib/ngx-statistic-collector.service.ts","ng://@verzth/ngx-statistic-collector/interceptors/AuthorizationInterceptor.ts","ng://@verzth/ngx-statistic-collector/lib/ngx-statistic-collector.module.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxStatisticCollectorConfig {\n  private host: string;\n  private key: string;\n  constructor(){}\n  setHost(host: string){\n    this.host = host;\n    return this;\n  }\n  getHost(){\n    return this.host;\n  }\n  setKey(key: string){\n    this.key = key;\n    return this;\n  }\n  getKey(){\n    return this.key;\n  }\n}\n\nexport const TIME = {\n  HOURLY: 'hourly',\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n};\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {GeneralResponse} from '../interfaces/GeneralResponse';\nimport EventParams from '../interfaces/EventParams';\nimport ContentParams from '../interfaces/ContentParams';\nimport HitParams from '../interfaces/HitParams';\nimport {NgxStatisticCollectorConfig} from './ngx-statistic-collector.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxStatisticCollectorService {\n\n  constructor(private http: HttpClient, private config: NgxStatisticCollectorConfig) {\n\n  }\n\n  getHits(time: string, params: HitParams): Observable<GeneralResponse<any>> {\n    return this.http.post<any>(\n      this.config.getHost() + 'hit/' + time,\n      params\n    );\n  }\n\n  getContents(time: string, params: ContentParams): Observable<GeneralResponse<any>> {\n    return this.http.post<any>(\n      this.config.getHost() + 'content/' + time,\n      params\n    );\n  }\n\n  getEvents(time: string, params: EventParams): Observable<GeneralResponse<any>> {\n    return this.http.post<any>(\n      this.config.getHost() + 'event/' + time,\n      params\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {NgxStatisticCollectorConfig} from '../lib/ngx-statistic-collector.config';\n\n@Injectable()\nexport class AuthorizationInterceptor implements HttpInterceptor{\n  constructor(private config: NgxStatisticCollectorConfig){}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const secureReq = req.clone( {\n      headers: req.headers\n        .set('Authorization', 'Basic ' + btoa(this.config.getKey() + ':')),\n      body: req.body\n    });\n    return next.handle(secureReq);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {NgxStatisticCollectorService} from './ngx-statistic-collector.service';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthorizationInterceptor} from '../interceptors/AuthorizationInterceptor';\nimport {NgxStatisticCollectorConfig} from './ngx-statistic-collector.config';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthorizationInterceptor, multi: true},\n    {provide: NgxStatisticCollectorService, useClass: NgxStatisticCollectorService},\n    {provide: NgxStatisticCollectorConfig, useClass: NgxStatisticCollectorConfig},\n  ]\n})\nexport class NgxStatisticCollectorModule { }\n"],"names":["NgxStatisticCollectorConfig","prototype","setHost","host","getHost","this","setKey","key","getKey","Injectable","args","providedIn","NgxStatisticCollectorService","getHits","time","params","http","post","config","getContents","getEvents","HttpClient","AuthorizationInterceptor","intercept","req","next","secureReq","clone","headers","set","btoa","body","handle","NgxStatisticCollectorModule","NgModule","declarations","imports","exports","providers","provide","HTTP_INTERCEPTORS","useClass","multi"],"mappings":"6YAAA,IAAAA,GASEA,EAAAC,UAAAC,QAAA,SAAQC,GAEN,OADA,KAAKA,KAAOA,EACZ,MAEFH,EAAAC,UAAAG,QAAA,WACE,OAAOC,KAAKF,MAEdH,EAAAC,UAAAK,OAAA,SAAOC,GAEL,OADA,KAAKA,IAAMA,EACX,MAEFP,EAAAC,UAAAO,OAAA,WACE,OAAOH,KAAKE,K,oBAnBfE,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,W,4IAKZ,SAAAX,KCRF,IAAAY,GAkBEA,EAAAX,UAAAY,QAAA,SAAQC,EAAcC,GACpB,OAAOV,KAAKW,KAAKC,KACfZ,KAAKa,OAAOd,UAAY,OAASU,EACjCC,IAIJH,EAAAX,UAAAkB,YAAA,SAAYL,EAAcC,GACxB,OAAOV,KAAKW,KAAKC,KACfZ,KAAKa,OAAOd,UAAY,WAAaU,EACrCC,IAIJH,EAAAX,UAAAmB,UAAA,SAAUN,EAAcC,GACtB,OAAOV,KAAKW,KAAKC,KACfZ,KAAKa,OAAOd,UAAY,SAAWU,EACnCC,I,oBA1BLN,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,W,yCATNU,EAAAA,Y,MAMArB,K,0IAON,SAAAY,EAAoBI,EAA0BE,GAA1Bb,KAAAW,KAAAA,EAA0BX,KAAAa,OAAAA,ECdhD,IAAAI,GAOEA,EAAArB,UAAAsB,UAAA,SAAUC,EAAuBC,G,IACzBC,EAAYF,EAAIG,MAAO,CAC3BC,QAASJ,EAAII,QACVC,IAAI,gBAAiB,SAAWC,KAAKzB,KAAKa,OAAOV,SAAW,MAC/DuB,KAAMP,EAAIO,OAEZ,OAAON,EAAKO,OAAON,I,oBATtBjB,EAAAA,a,yCAFOT,KAaRsB,GATE,SAAAA,EAAoBJ,GAAAb,KAAAa,OAAAA,ECNtB,IAAAe,G,oBAQCC,EAAAA,SAAQxB,KAAA,CAAC,CACRyB,aAAc,GACdC,QAAS,GACTC,QAAS,GACTC,UAAW,CACT,CAACC,QAASC,EAAAA,kBAAmBC,SAAUnB,EAA0BoB,OAAO,GACxE,CAACH,QAAS3B,EAA8B6B,SAAU7B,GAClD,CAAC2B,QAASvC,EAA6ByC,SAAUzC,QAGViC,GAV3C,SAAAA,K"}